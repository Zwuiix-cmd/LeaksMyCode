/// <reference types="node" />
import Dgram from 'dgram';
import EventEmitter from 'events';
import { Connection } from "./Connection";
import ServerName from './utils/ServerName';
import InetAddress from './utils/InetAddress';
export declare class Server extends EventEmitter {
    server: boolean;
    client: boolean;
    running: boolean;
    socket: Dgram.Socket;
    connections: Map<string, Connection>;
    hostname: string;
    port: number;
    serverName: ServerName;
    inLog: any;
    outLog: any;
    serverId: bigint;
    constructor(hostname: string, port: number, serverName: ServerName);
    listen(): Promise<this>;
    handle(buffer: Buffer, sender: InetAddress): void;
    sendBuffer(sendBuffer: Buffer, client: InetAddress): void;
    setPongAdvertisement(ad: any): void;
    handleUnconnectedPing(buffer: any): Buffer;
    handleOpenConnectionRequest1(buffer: any): Buffer;
    handleOpenConnectionRequest2(buffer: any, address: InetAddress): Buffer;
    startTicking(): void;
    close(): void;
}
